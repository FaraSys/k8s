apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcdkeeper
  namespace: etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcdkeeper
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: etcdkeeper
    spec:
      containers:
      - name: etcdkeeper
        image: fyakhyaev/etcdkeeper
        command: ["./etcdkeeper.bin"]
        args: ["-usetls", "-auth", "-cacert", "/etc/ssl/certs/root-cag.crt"]
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "32Mi"
          limits:
            memory: "128Mi" 
        volumeMounts:
        - name: root-cert
          mountPath: /etc/ssl/certs/root-cag.crt
          subPath: root-cag.crt
      volumes:
      - name: root-cert
        secret:
          secretName: root-cag.crt

---

apiVersion: v1
kind: Service
metadata:
  name: etcdkeeper
  namespace: etcd
spec:
  type: ClusterIP
  selector:
    app: etcdkeeper
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: etcdkeeper
  namespace: etcd
  annotations:
    nginx.ingress.kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/app-root: /etcdkeeper
spec:
  tls:
  - hosts:
      - etcdkeeper.contoso.com
    secretName: tls
  rules:
  - host: etcdkeeper.contoso.com
    http:
      paths:
      - backend:
          service:
            name: etcdkeeper
            port:
              number: 80
        pathType: ImplementationSpecific
